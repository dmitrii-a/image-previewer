// Code generated by mockery v2.40.1. DO NOT EDIT.

package mocks

import (
	domain "github.com/dmitrii-a/image-previewer/internal/domain"
	mock "github.com/stretchr/testify/mock"
)

// ImageDownloader is an autogenerated mock type for the ImageDownloader type
type ImageDownloader struct {
	mock.Mock
}

// Download provides a mock function with given fields: url, headers
func (_m *ImageDownloader) Download(url string, headers map[string][]string) (*domain.Image, error) {
	ret := _m.Called(url, headers)

	if len(ret) == 0 {
		panic("no return value specified for Download")
	}

	var r0 *domain.Image

	var r1 error

	if rf, ok := ret.Get(0).(func(string, map[string][]string) (*domain.Image, error)); ok {
		return rf(url, headers)
	}

	if rf, ok := ret.Get(0).(func(string, map[string][]string) *domain.Image); ok {
		r0 = rf(url, headers)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.Image)
		}
	}

	if rf, ok := ret.Get(1).(func(string, map[string][]string) error); ok {
		r1 = rf(url, headers)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewImageDownloader creates a new instance of ImageDownloader. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewImageDownloader(t interface {
	mock.TestingT
	Cleanup(func())
}) *ImageDownloader {
	mock := &ImageDownloader{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
